import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from config import AppConfig
from processors.document_processor import DocumentProcessor
from processors.gigachat_manager import GigaChatManager
from processors.vector_store import VectorStoreManager
from langchain_huggingface import HuggingFaceEmbeddings
import datetime  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
from logger import ChatLogger  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –ª–æ–≥–≥–µ—Ä–∞

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = AppConfig()

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
SYSTEM_PROMPT = """
# –†–æ–ª—å: –ò–Ω–∂–µ–Ω–µ—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Unilight Assist

## –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:
1. –†–µ—à–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
2. –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ 3 —Ç–∏–ø–∞–º
3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–∫–æ–Ω–æ–∫ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏

## –ê–ª–≥–æ—Ä–∏—Ç–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤:

### 1. –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —ç—Ç–∞–ø):
[–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π] - –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º: –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è
[–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π] - –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –∫–æ–º–ø–∞–Ω–∏–∏ (—Ä–∞–∑–≤–∏—Ç–∏–µ, –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ)
[–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π] - –¢–µ–º—ã, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∫–æ–º–ø–∞–Ω–∏–∏

### 2. –†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π:
‚Ä¢ –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.
‚Ä¢ –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –∏–∑—É—á–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞, –≤—ã–¥–µ–ª–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –≤—Å–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∏ –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–π –æ—Ç–≤–µ—Ç.
‚Ä¢ –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ—Ç–≤–µ—Ç—å: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏. –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è."

### 3. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–æ–≤:
**–î–ª—è [–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å]:**
üîß [–ü—Ä–æ–±–ª–µ–º–∞]: –ö—Ä–∞—Ç–∫–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –∏ –æ–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
üîé [–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã]: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–æ—à–∞–≥–æ–≤–æ –ø–µ—Ä–µ—á–∏—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞.
üõ†Ô∏è [–†–µ—à–µ–Ω–∏–µ]: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, —Å —É—á–µ—Ç–æ–º –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω.
üìå [–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏]: –î–æ–±–∞–≤—å —Å–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –ø–æ–¥–æ–±–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ –±—É–¥—É—â–µ–º (–µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ).

**–î–ª—è [–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π/–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π]:**
üö´ –≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–±–ª–µ–º–∞–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

### 4. –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
‚Ä¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤:
  - üîß –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
  - üîé –¥–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω
  - üõ†Ô∏è –¥–ª—è –ø–æ—à–∞–≥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π
  - üìå –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  - üö´ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö/–∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
‚Ä¢ –ò–∑–±–µ–≥–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞, –æ–±—ä—è—Å–Ω—è–π –¥–æ—Å—Ç—É–ø–Ω–æ.
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –¥–∏–∞–ª–æ–≥ —É—Ç–æ—á–Ω—è—é—â–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.

### 5. –û—Å–æ–±—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:
‚Ä¢ –ó–∞–ø—Ä–æ—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ ‚Üí –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–∞–±–ª–∏—Ü —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏.
‚Ä¢ –ù–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å ‚Üí —É—Ç–æ—á–Ω–∏: "–£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è."
‚Ä¢ –ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚Üí –∑–∞–ø—Ä–æ—Å–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.

## –ñ–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚õî –ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞–π —Ä–µ—à–µ–Ω–∏–π –≤–Ω–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
‚õî –ù–µ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
‚õî –ù–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ª–∏—á–Ω–æ—Å—Ç–∏ ‚Üí "–Ø —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Unilight Assist"
"""

class BotHandler:
    def __init__(self, config: AppConfig):
        self.config = config
        self.bot = Bot(token=config.telegram_token)
        self.dp = Dispatcher()
        self.vector_store = None
        self.chat_manager = None
        self.logger = ChatLogger(config)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.dp.message(Command("start"))(self.start_handler)
        self.dp.message(Command("help"))(self.help_handler)
        self.dp.message()(self.message_handler)

    async def initialize_system(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã"""
        doc_processor = DocumentProcessor(self.config)
        docs = doc_processor.load_and_split(self.config.document_url)

        embeddings = HuggingFaceEmbeddings(model_name=self.config.embedding_model)
        self.vector_store = VectorStoreManager(embeddings).create_store(docs)
        self.chat_manager = GigaChatManager(self.config)

    async def start_handler(self, message: Message):
        await message.answer(
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Unilight Assist.\n"
            "–ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å –ø–æ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –∏ —è –ø–æ–º–æ–≥—É —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É!"
        )

    async def help_handler(self, message: Message):
        await message.answer(
            "üÜò –ü–æ–º–æ—â—å:\n"
            "- –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞–º —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º\n"
            "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞\n"
            "- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –≤—ã–≤–æ–¥–∞ —ç—Ç–æ–π —Å–ø—Ä–∞–≤–∫–∏"
        )

    async def message_handler(self, message: Message):
        user_query = message.text.strip()

        if not user_query:
            return await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")

        try:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç..."
            await self.bot.send_chat_action(message.chat.id, "typing")

            # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
            response, metadata = await self.process_query(user_query)  # –ü–æ–ª—É—á–∞–µ–º response –∏ metadata

            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ UTF-8 –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            try:
                await message.answer(response.encode("utf-8").decode("utf-8"))
            except UnicodeEncodeError:
                response = response.encode("utf-8").decode("utf-8")
                await message.answer(response)

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
            log_data = {
                'timestamp': datetime.datetime.now().isoformat(),
                'user_id': message.from_user.id,
                'username': message.from_user.username or "",
                'message_text': user_query,
                'bot_response': response.split('\n\n')[0],  # –ë–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
                'response_time': metadata['response_time'],
                'total_tokens': metadata['total_tokens'],
                'cost': metadata['cost']
            }
            await self.logger.log_message(log_data)

        except Exception as e:
            await message.answer(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    async def process_query(self, query: str) -> str:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞"""
        loop = asyncio.get_running_loop()

        # –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        context_docs = await loop.run_in_executor(
            None,
            lambda: self.vector_store.similarity_search(query)
        )
        context = "\n".join(doc.page_content for doc in context_docs)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
        response, metadata = await loop.run_in_executor(
            None,
            lambda: self.chat_manager.generate_response(SYSTEM_PROMPT, query, context)
        )

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        formatted_response = (
            f"{response}\n\n"
            f"‚è± –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {metadata['response_time']:.2f}—Å\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞: {metadata['cost']:.5f}‚ÇΩ"
        )

        return formatted_response, metadata  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º response –∏ metadata

    async def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("üü¢ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        await self.initialize_system()
        print("üü¢ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        await self.dp.start_polling(self.bot)

if __name__ == "__main__":
    bot_handler = BotHandler(config)

    try:
        print("üü¢ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        asyncio.run(bot_handler.start())
    except Exception as e:
        print(f"üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    except KeyboardInterrupt:
        print("üü† –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
